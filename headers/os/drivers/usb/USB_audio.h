#ifndef USB_AUDIO_H
#define USB_AUDIO_H

// (Partial) USB Class Definitions for Audio Devices, version 1.0
// Reference: http://www.usb.org/developers/devclass_docs/audio10.pdf

#include <BeBuild.h>	// for _PACKED definition

#define USB_AUDIO_DEVICE_CLASS 			0x01
#define USB_AUDIO_CLASS_VERSION			0x0100

enum {
	USB_AUDIO_INTERFACE_AUDIO_CLASS		= 0x01
};

enum { // Audio Interface Subclasses	
	USB_AUDIO_INTERFACE_UNDEFINED_SUBCLASS =	0x00, 
	USB_AUDIO_INTERFACE_AUDIOCONTROL_SUBCLASS =	0x01,
	USB_AUDIO_INTERFACE_AUDIOSTREAMING_SUBCLASS,		//
	USB_AUDIO_INTERFACE_MIDISTREAMING_SUBCLASS			// 
};

enum { // Audio Interface Protocol Codes	
	USB_AUDIO_PROTOCOL_UNDEFINED =	0x00 
};

enum { // Audio Interface Protocol Codes	
	USB_AUDIO_CS_UNDEFINED				= 0x20,
	USB_AUDIO_CS_DEVICE					= 0x21,
	USB_AUDIO_CS_CONFIGURATION			= 0x22,
	USB_AUDIO_CS_STRING					= 0x23,
	USB_AUDIO_CS_INTERFACE				= 0x24,
	USB_AUDIO_CS_ENDPOINT				= 0x25
};

enum { // Audio Class-Specific AudioControl Interface descriptor subtypes
	USB_AUDIO_AC_DESCRIPTOR_UNDEFINED	= 0x00,
	USB_AUDIO_AC_HEADER					= 0x01,
	USB_AUDIO_AC_INPUT_TERMINAL			= 0x02,
	USB_AUDIO_AC_OUTPUT_TERMINAL		= 0x03,
	USB_AUDIO_AC_MIXER_UNIT				= 0x04,
	USB_AUDIO_AC_SELECTOR_UNIT			= 0x05,
	USB_AUDIO_AC_FEATURE_UNIT			= 0x06,
	USB_AUDIO_AC_PROCESSING_UNIT		= 0x07,
	USB_AUDIO_AC_EXTENSION_UNIT			= 0x08,
	USB_AUDIO_AC_EFFECT_UNIT_R2			= 0x07,
	USB_AUDIO_AC_PROCESSING_UNIT_R2		= 0x08,
	USB_AUDIO_AC_EXTENSION_UNIT_R2		= 0x09,
	USB_AUDIO_AC_CLOCK_SOURCE_R2		= 0x0A,
	USB_AUDIO_AC_CLOCK_SELECTOR_R2		= 0x0B,
	USB_AUDIO_AC_CLOCK_MULTIPLIER_R2	= 0x0C,
	USB_AUDIO_AC_SAMPLE_RATE_CONVERTER_R2 = 0x0D
};

enum { // Audio Class-Specific AudioStreaming Interface descriptor subtypes
	USB_AUDIO_AS_DESCRIPTOR_UNDEFINED	= 0x00,
	USB_AUDIO_AS_GENERAL				= 0x01,
	USB_AUDIO_AS_FORMAT_TYPE			= 0x02,
	USB_AUDIO_AS_FORMAT_SPECIFIC		= 0x03
};

enum { // Processing Unit Process Types  (for USB_AUDIO_AC_PROCESSING_UNIT)
	USB_AUDIO_UPDOWNMIX_PROCESS	= 0x01,
	USB_AUDIO_DOLBY_PROLOGIC_PROCESS,
	USB_AUDIO_3D_STEREO_EXTENDER_PROCESS,
	USB_AUDIO_REVERBERATION_PROCESS,
	USB_AUDIO_CHORUS_PROCESS,
	USB_AUDIO_DYN_RANGE_COMP_PROCESS
};

enum { // Audio Class-Specific Request Codes
	USB_AUDIO_SET_CUR		= 0x01,
	USB_AUDIO_GET_CUR		= 0x81,
	USB_AUDIO_SET_MIN		= 0x02,
	USB_AUDIO_GET_MIN		= 0x82,
	USB_AUDIO_SET_MAX		= 0x03,
	USB_AUDIO_GET_MAX		= 0x83,
	USB_AUDIO_SET_RES		= 0x04,
	USB_AUDIO_GET_RES		= 0x84,
	USB_AUDIO_SET_MEM		= 0x05,
	USB_AUDIO_GET_MEM		= 0x85,
	USB_AUDIO_GET_STATUS	= 0xFF
};

enum { // Terminal Control Selectors
	USB_AUDIO_COPY_PROTECT_CONTROL = 0x01
};

/* A.10.2 Feature Unit Control Selectors */
enum {
	USB_AUDIO_AC_FU_CONTROL_UNDEFINED	= 0x00,
	USB_AUDIO_MUTE_CONTROL				= 0x01,
	USB_AUDIO_VOLUME_CONTROL			= 0x02,
	USB_AUDIO_BASS_CONTROL				= 0x03,
	USB_AUDIO_MID_CONTROL				= 0x04,
	USB_AUDIO_TREBLE_CONTROL			= 0x05,
	USB_AUDIO_GRAPHIC_EQUALIZER_CONTROL	= 0x06,
	USB_AUDIO_AUTOMATIC_GAIN_CONTROL	= 0x07,
	USB_AUDIO_DELAY_CONTROL				= 0x08,
	USB_AUDIO_BASS_BOOST_CONTROL		= 0x09,
	USB_AUDIO_LOUDNESS_CONTROL			= 0x0A
};

/* A.10.3.1 Up/Down-mix Processing Unit Control Selectors */
#define USB_AUDIO_UD_CONTROL_UNDEFINED 0x00
#define USB_AUDIO_UD_ENABLED_CONTROL 0x01
#define USB_AUDIO_UD_MODE_SELECT_CONTROL 0x02

/* A.10.3.2 Dolby Prologic(tm) Processing Unit Control Selectors */
#define USB_AUDIO_DP_CONTROL_UNDEFINED 0x00
#define USB_AUDIO_DP_ENABLE_CONTROL 0x01
#define USB_AUDIO_DP_MODE_SELECT_CONTROL 0x02

/* A.10.3.3 3D Stereo Extender Processing Unit Control Selectors */
#define USB_AUDIO_3D_CONTROL_UNDEFINED 0x00
#define USB_AUDIO_3D_ENABLED_CONTROL 0x01
#define USB_AUDIO_3D_SPACIOUSNESS_CONTROL 0x03

/* A.10.3.4 Reverberation Processing Unit Control Selectors */
#define USB_AUDIO_RV_CONTROL_UNDEFINED 0x00
#define USB_AUDIO_RV_ENABLE_CONTROL 0x01
#define USB_AUDIO_RV_REVERB_LEVEL_CONTROL 0x02
#define USB_AUDIO_RV_REVERB_TIME_CONTROL 0x03
#define USB_AUDIO_RV_REVERB_FEEDBACK_CONTROL 0x04

/* A.10.3.5 Chorus Processing Unit Control Selectors */
#define USB_AUDIO_CH_CONTROL_UNDEFINED 0x00
#define USB_AUDIO_CH_ENABLE_CONTROL 0x01
#define USB_AUDIO_CHORUS_LEVEL_CONTROL 0x02
#define USB_AUDIO_CHORUS_RATE_CONTROL 0x03
#define USB_AUDIO_CHORUS_DETH_CONTROL 0x04

/* A.10.3.6 Dynamic Range Compressor Processing Unit Control Selectors */
#define USB_AUDIO_DR_CONTROL_UNDEFINED 0x00
#define USB_AUDIO_DR_ENABLE_CONTROL 0x01
#define USB_AUDIO_COMPRESSION_RATE_CONTROL 0x02
#define USB_AUDIO_MAXAMPL_CONTROL 0x03
#define USB_AUDIO_THRESHOLD_CONTROL 0x04
#define USB_AUDIO_ATTACK_TIME 0x05
#define USB_AUDIO_RELEASE_TIME 0x06

/* A.10.4 Extension Unit Control Selectors */
#define USB_AUDIO_XU_CONTROL_UNDEFINED 0x00
#define USB_AUDIO_XU_ENABLE_CONTROL 0x01

/* A.10.5 Endpoint Control Selectors */
enum {
	USB_AUDIO_EP_CONTROL_UNDEFINED			= 0x00,
	USB_AUDIO_SAMPLING_FREQ_CONTROL			= 0x01,
	USB_AUDIO_PITCH_CONTROL					= 0x02
};


typedef struct
{
	uint8 length;
	uint8 type;
	uint8 subtype;
	uint8 unit_id;
	uint8 source_id;
	uint8 control_size;
	uint16 controls[0];
} _PACKED usb_audio_feature_unit_descriptor;

typedef struct {
	uint8 length;
	uint8 type;
	uint8 subtype;
	uint8 format_type;
	uint8 num_channels;
	uint8 subframe_size;
	uint8 bit_resolution;
	uint8 sample_freq_type;
	uint8 sample_freq[3];	// [0] + [1] << 8 + [2] << 16
	//  if sample_freq_type != 1,
	// (sample_freq_type - 1) x uint8 sample_freq[3] follows... 
} _PACKED usb_audio_format_type_descriptor;

// bitset for feature control bitmap
// Table 4-7, page 44, bmaControls field
enum {
	BMA_CTL_MUTE_R1			= 0X0001,
	BMA_CTL_VOLUME_R1		= 0X0002,
	BMA_CTL_BASS_R1			= 0X0004,
	BMA_CTL_MID_R1			= 0X0008,
	BMA_CTL_TREBLE_R1		= 0X0010,
	BMA_CTL_GRAPHEQ_R1		= 0X0020,
	BMA_CTL_AUTOGAIN_R1		= 0X0040,
	BMA_CTL_DELAY_R1		= 0X0080,
	BMA_CTL_BASSBOOST_R1	= 0X0100,
	BMA_CTL_LOUDNESS_R1		= 0X0200,
	// Release 2.0
	BMA_CTL_MUTE			= 0X00000003,
	BMA_CTL_VOLUME			= 0X0000000C,
	BMA_CTL_BASS			= 0X00000030,
	BMA_CTL_MID				= 0X000000C0,
	BMA_CTL_TREBLE			= 0X00000300,
	BMA_CTL_GRAPHEQ			= 0X00000C00,
	BMA_CTL_AUTOGAIN		= 0X00003000,
	BMA_CTL_DELAY			= 0X0000C000,
	BMA_CTL_BASSBOOST		= 0X00030000,
	BMA_CTL_LOUDNESS		= 0X000C0000,
	BMA_CTL_INPUTGAIN		= 0X00300000,
	BMA_CTL_INPUTGAINPAD	= 0X00C00000,
	BMA_CTL_PHASEINVERTER	= 0X03000000,
	BMA_CTL_UNDERFLOW		= 0X0C000000,
	BMA_CTL_OVERFLOW		= 0X30000000
};

// Table A-4, page 30
// Format Type Codes
enum {
	USB_AUDIO_FORMAT_TYPE_UNDEFINED		= 0x00,
	USB_AUDIO_FORMAT_TYPE_I				= 0x01,
	USB_AUDIO_FORMAT_TYPE_II			= 0x02,
	USB_AUDIO_FORMAT_TYPE_III			= 0x03
};

// Table A-1, page 29, wFormatTag
// Audio Data Format Type I codes
enum {
	USB_AUDIO_FORMAT_TYPE_I_UNDEFINED	= 0x0000,
	USB_AUDIO_FORMAT_PCM				= 0x0001,
	USB_AUDIO_FORMAT_PCM8				= 0x0002,
	USB_AUDIO_FORMAT_IEEE_FLOAT			= 0x0003,
	USB_AUDIO_FORMAT_ALAW				= 0x0004,
	USB_AUDIO_FORMAT_MULAW				= 0x0005
};


#endif	// USB_AUDIO_H
